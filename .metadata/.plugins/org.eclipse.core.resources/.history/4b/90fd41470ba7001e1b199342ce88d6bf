package com.example.cardetails.service;

import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;

import com.example.cardetails.model.Car;
import com.example.cardetails.repository.CarRepository;

@Service
public class CarServiceImpl implements CarService {
	
	CarRepository carRepository;
	
	public CarServiceImpl(CarRepository carRepository) {
		super();
		this.carRepository = carRepository;
	}

	@Override
	public String createCarDetails(Car car) {
		carRepository.save(car);
		return "Success";
	}

	@Override
	public String updateCarDetails(Car car) {
		carRepository.save(car);
		return "Success";
	}

	@Override
	public String deleteCarDetails(String carId) {
		carRepository.deleteById(carId);
		return "Success";
	}

	@Override
	 public Car getCarDetails(String carId) {
        Optional<Car> optionalCar = carRepository.findById(carId);

        // Check if the car is present in the Optional
        if (optionalCar.isPresent()) {
            return optionalCar.get(); // Return the Car object
        } else {
            // Handle the case where the car is not found (return null or throw an exception, depending on your design)
            return null;
        }
    }
	
//	@Override
//	public Car getCarDetails(String carId) {
//	    Optional<Car> optionalCar = carRepository.findById(carId);
//	    
//	    if (optionalCar.isPresent()) {
//	        Car car = optionalCar.get();
//	        // Depending on your needs, you might return a formatted string, JSON, or any other representation of the car details.
//	        return "Car Details: " + car.toString();
//	    } else {
//	        return "Car not found with ID: " + carId;
//	    }
//	}


	@Override
	public List<Car> getAllCarDetails() {
		return carRepository.findAll();
	}
	

}
